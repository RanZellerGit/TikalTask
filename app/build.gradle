apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply from: 'tmp.gradle'

apply plugin: 'com.mindera.gradle.slack'

buildscript {

    repositories {
        maven {
            url "https://jitpack.io"
        }
    }

    dependencies {
        classpath 'com.github.Mindera:gradle-slack-plugin:1.0.7'
    }
}

slack {
    url 'https://hooks.slack.com/services/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'
    dependsOnTasks 'bumperVersionPatch','bumperVersionMinor'
    title "https://tikalapks3.s3-us-west-1.amazonaws.com/TikalTask/TikalTask_Build/${System.getProperty("appVersion")}/${getVersion()['appVersionName']}.apk"
}

android {

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.tikaltask"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode appVersionCode.toInteger()
        versionName appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    android.applicationVariants.all { variant ->
        renameArtifact(variant, "debug")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {

        }


    }
}

def getVersion(){
    def versionPropsFile = file('gradle.properties')
    if (!versionPropsFile.exists()) {
        versionPropsFile.createNewFile()
    }
    def versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    return versionProps
}
def renameArtifact(variant, defaultConfig) {
    variant.outputs.all { output ->
        def fullName = output.outputFile.name
        def projectName = fullName.substring(0, fullName.indexOf('-'))
    }


}



ext {
    supportLibVersion = '28.0.0'
    retrofitVersion = '2.5.0'
    rxAndroidVersion = '2.0.1'
    rxJavaVersion = '2.1.7'
    loggingInterceptorVersion = '3.9.0'
    retrofit2RxJava2AdapterVersion = '2.3.0'
    roomVersion = '1.1.1'
    koinVersion = '1.0.2'
    liveDataVersion = '1.1.1'
    pageingVersion = '1.0.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Support libraries
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit2RxJava2AdapterVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${loggingInterceptorVersion}"

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
    implementation "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"

    // Room DB
    implementation "android.arch.persistence.room:runtime:${roomVersion}"
    kapt "android.arch.persistence.room:compiler:${roomVersion}"

    // Di
    implementation "org.koin:koin-android:${koinVersion}"
    compile "org.koin:koin-android-viewmodel:${koinVersion}"

    // LiveData lib
    implementation "android.arch.lifecycle:extensions:${liveDataVersion}"
    implementation "android.arch.lifecycle:runtime:${liveDataVersion}"
    annotationProcessor "android.arch.lifecycle:compiler:${liveDataVersion}"

    // Paging
    implementation "android.arch.paging:runtime:${pageingVersion}"

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
